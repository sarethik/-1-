using System;
using System.Text;
using System.Text.RegularExpressions;


namespace Lab1
{
    class Program
    {
        static void FindMatches(string pattern, string stringToCheck)
        {
            Regex pat = new Regex(pattern);
            MatchCollection match = pat.Matches(stringToCheck);
            Console.WriteLine("Строка = {0}\t Образец = {1} \t Найдено {2}", stringToCheck, pattern, match.Count);
        }

        static void Randomize(int[,] points, int pointQuantity, int axisQuantity)
        {
            Random rnd = new Random();
            for (int j = 0; j < pointQuantity; j++)
            {
                for (int p = 0; p < axisQuantity; p++)
                {
                    points[j, p] = rnd.Next(-10, 10);
                }
            }
        }
       
        static void TheLetterToUpper(StringBuilder str)
        {

            int i = 0;
            while (i != str.Length)
            {
                if (str[i] == '.' || str[i] == '?' || str[i] == '!')
                {
                    if (str[i + 1] == ' ')
                    {
                        while(str[i + 1] == ' ')
                        {
                            i++;
                        }
                        str[i + 1] = char.ToUpper(str[i + 1]);
                        i++;
                        continue;
                    }
                    str[i + 1] = char.ToUpper(str[i + 1]);
                    i++;
                    continue;
                }
                i++;
            }
        }

        static double Distance(int aX, int aY, int bX, int bY) => Math.Sqrt(Math.Pow(aX - bX, 2) + Math.Pow(aY - bY, 2));

        static void MaxDistance(int[,] points, ref int[,] maxPoints, int pointQuantity, int axisQuantity, double maxDistance)
        {
            for (int i = 0; i < pointQuantity; i++)
            {
                for (int j = pointQuantity - 1; j > i; j--)
                {
                    double d = Distance(points[i, 0], points[i, 1], points[j, 0], points[j, 1]);

                    if (d > maxDistance)
                    {
                        maxDistance = d;
                        maxPoints[0, 0] = points[i, 0];
                        maxPoints[0, 1] = points[i, 1];
                        maxPoints[1, 0] = points[j, 0];
                        maxPoints[1, 1] = points[j, 1];
                    }
                }
            }
        }
        static void Main(string[] args)
        {          
            int axisQuantity = 2, pointQuantity = 3;
            int[,] points = new int[pointQuantity, axisQuantity];
            int[,] maxPoints = new int[2, 2];
            double maxDistance = 0;
            string pattern = "asd";
            string stringToCheck = "asdfdgfdasd hgfh asd";
            StringBuilder str = new StringBuilder(".a ! b ?   c");

            Console.WriteLine("Задание 1.1");
            Randomize(points, pointQuantity, axisQuantity);
            MaxDistance(points, ref maxPoints, pointQuantity, axisQuantity, maxDistance);
            Console.WriteLine("расстояние между точками x({0}, {1}) и y({2}, {3}) = {4}\n", maxPoints[0, 0], maxPoints[0, 1], maxPoints[1, 0], maxPoints[1, 1], maxDistance);

            Console.WriteLine("\nЗадание 2.1");
            TheLetterToUpper(str);
            for (int j = 0; j < str.Length; j++)
            {
                Console.Write("{0}", str[j]);
            }

            Console.WriteLine("\n\nЗадание 3.1");
            FindMatches(pattern, stringToCheck);
        }
    
    }
}
